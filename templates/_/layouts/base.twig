{# @var craft \craft\web\twig\variables\CraftVariable #}

{%- minify -%}

{% set env = getenv('ENVIRONMENT') %}
{% set baseUrl = url() %}

{% header "Link: <#{baseUrl}>; rel=dns-prefetch;,<#{baseUrl}>; rel=preconnect; crossorigin;" %}
<!DOCTYPE html>

{%- endminify -%}

<html lang="{{ craft.app.language |slice(0,2) }}" prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb#">

    <head>
        {%- minify -%}
        <link rel="dns-prefetch" href="{{ baseUrl }}" crossorigin>
        <link rel="preconnect" href="{{ baseUrl }}" crossorigin>

        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width,minimum-scale=1">
        <meta name="csrf-token-name" content="{{ craft.app.config.general.csrfTokenName }}">
        <meta name="csrf-token" content="{{ craft.app.request.csrfToken() }}">

        {#-- Favicons --#}
        <link rel="apple-touch-icon" sizes="180x180" href="{{ baseUrl }}images/icons/apple-touch-icon.png">
        <link rel="icon" type="image/png" sizes="32x32" href="{{ baseUrl }}images/icons/favicon-32x32.png">
        <link rel="icon" type="image/png" sizes="16x16" href="{{ baseUrl }}images/icons/favicon-16x16.png">
        <link rel="manifest" href="{{ baseUrl }}manifest.json">
        <link rel="mask-icon" href="{{ baseUrl }}images/icons/safari-pinned-tab.svg" color="#000000">
        <link rel="shortcut icon" href="{{ baseUrl }}favicon.ico">
        <meta name="msapplication-TileColor" content="#000000">
        <meta name="msapplication-config" content="{{ baseUrl }}browserconfig.xml">
        <meta name="theme-color" content="#ffffff">

        {# -- Inline CSS block used by templates for Critical CSS #}
        {# -- Only use Critical CSS & LoadCSS when we have it available to prevent flashing #}
        {% set inline_css = "" %}
        {% if env != "local" %}
            {% set inline_css =  block("inline_css") is defined ? block("inline_css") : "" %}
        {% endif %}
        {% if inline_css|trim is not empty %}
            <style>{{ inline_css | raw }}</style>
            <link rel="preload" href="{{ mix('css/site.css') }}" as="style" onload="this.onload=null;this.rel='stylesheet'">
            <noscript><link rel="stylesheet" href="{{ mix('css/site.css') }}"></noscript>
            <script>!function(n){"use strict";n.loadCSS||(n.loadCSS=function(){});var o=loadCSS.relpreload={};if(o.support=function(){var e;try{e=n.document.createElement("link").relList.supports("preload")}catch(t){e=!1}return function(){return e}}(),o.bindMediaToggle=function(t){var e=t.media||"all";function a(){t.media=e}t.addEventListener?t.addEventListener("load",a):t.attachEvent&&t.attachEvent("onload",a),setTimeout(function(){t.rel="stylesheet",t.media="only x"}),setTimeout(a,3e3)},o.poly=function(){if(!o.support())for(var t=n.document.getElementsByTagName("link"),e=0;e<t.length;e++){var a=t[e];"preload"!==a.rel||"style"!==a.getAttribute("as")||a.getAttribute("data-loadcss")||(a.setAttribute("data-loadcss",!0),o.bindMediaToggle(a))}},!o.support()){o.poly();var t=n.setInterval(o.poly,500);n.addEventListener?n.addEventListener("load",function(){o.poly(),n.clearInterval(t)}):n.attachEvent&&n.attachEvent("onload",function(){o.poly(),n.clearInterval(t)})}"undefined"!=typeof exports?exports.loadCSS=loadCSS:n.loadCSS=loadCSS}("undefined"!=typeof global?global:this);</script>
        {% else %}
            <link rel="stylesheet" href="{{ mix('css/site.css') }}">
        {% endif %}
        {%- endminify -%}
    </head>

    <body class="first-load loading {% if bodyClass is defined %}{{ bodyClass }}{% endif %}">

        {% block body %}{% endblock %}

        <script src="{{ mix('js/site.js') }}"></script>

    </body>

</html>
